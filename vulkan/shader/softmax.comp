#version 450
#define LOCAL_SZ_X 8

layout(binding = 0) readonly buffer Input0{
    float input_buffer[];
};
layout(binding = 1) writeonly buffer Output{
    float output_buffer[];
};

layout(push_constant) uniform pushBlock {
    int array_size;
    float beta;
    int total;
} p;

layout(local_size_x = LOCAL_SZ_X) in;

void main()
{
    int gid = int(gl_GlobalInvocationID.x);
    if (gid >= p.total) return;

    uint start = gid * p.array_size;
    float max = 0.0f;

    for (uint i = 0u; i < p.array_size; ++i)
    {
        uint index = start + i;
        if (max < input_buffer[index])
        {
            max = input_buffer[index];
        }
    }

    float sum = 0.0f;
    for (uint i = 0u; i < p.array_size; ++i)
    {
        uint index = start + i;
        float f = exp(p.beta * (input_buffer[index] - max));
        sum += f;
    }

    for (uint i = 0u; i < p.array_size; ++i)
    {
       uint index = start + i;
       float f = exp(p.beta * (input_buffer[index] - max));
       output_buffer[index] = f / sum;
    }
}
