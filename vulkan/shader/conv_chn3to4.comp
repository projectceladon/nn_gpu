#version 450
#define FETCH_PER_WI 16  // same to block_width

layout (constant_id = 0) const int LOCAL_SZ_X = 0;
layout (constant_id = 1) const int LOCAL_SZ_Y = 0;
layout (constant_id = 2) const int LOCAL_SZ_Z = 0;
layout (constant_id = 3) const int IN_H = 0;
layout (constant_id = 4) const int IN_W = 0;
layout (constant_id = 5) const int OUT_H = 0;
layout (constant_id = 6) const int OUT_W = 0;
layout (constant_id = 7) const int STRIDE_H = 0;
layout (constant_id = 8) const int STRIDE_W = 0;
layout (constant_id = 9) const int PAD_H = 0;
layout (constant_id = 10) const int PAD_W = 0;
layout (constant_id = 11) const int FILTER_H = 0;
layout (constant_id = 12) const int FILTER_W = 0;
layout (constant_id = 13) const int CHANNELS = 0;
layout (constant_id = 14) const int BATCH = 0;
layout (constant_id = 15) const int M = 0;
layout (constant_id = 16) const int K = 0;
layout (constant_id = 17) const int N = 0;
layout (constant_id = 18) const int ACTIVATION = 0;
layout (constant_id = 19) const int NUM_ITEMS = 0;
layout (constant_id = 20) const int TAIL_M = 0;

layout(binding = 0) readonly buffer Input0 {
  float src[];
};

layout(binding = 1) writeonly buffer Output {
  float dst[];
};

layout(local_size_x_id = 0) in;
layout(local_size_y = 1, local_size_z = 1) in;

void main()
{
  int id = int(gl_WorkGroupID.x * gl_WorkGroupSize.x) * FETCH_PER_WI + int(gl_LocalInvocationID.x);
  // for (int i = 0; i < FETCH_PER_WI && uint(id) < NUM_ITEMS; i++)
  for (int i = 0; uint(id) < NUM_ITEMS; i++)
  {
    int out_id = id / 3 * 4 + id % 3;
    dst[out_id] = src[id];
    id += int(gl_WorkGroupSize.x);
  }
}
